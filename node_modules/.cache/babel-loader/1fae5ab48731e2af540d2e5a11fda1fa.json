{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\2\\uCC28\\uD504\\uB85C\\uC81D\\uD2B8\\\\DrTart-frontend\\\\src\\\\pages\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { API_ADDRESS } from '../../apiConfig';\nimport InputInterface from './InputInterface/InputInterface';\nimport Button from '../../components/Button/Button';\nimport '../Login/Login.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const idInputRef = useRef();\n  const pwInputRef = useRef();\n  const [isAlertPopId, setIsAlertPopId] = useState(false);\n  const [isAlertPopPw, setIsAlertPopPw] = useState(false);\n\n  const validateId = () => {\n    const idValidRegex = /^([a-z0-9_.-]+)@([da-z.-]+).([a-z.]{2,6})$/g;\n    const idValue = idInputRef.current.value;\n    const isIdValid = !!idValue.match(idValidRegex);\n    return isIdValid;\n  };\n\n  const validatePw = () => {\n    const pwValidRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/g;\n    const pwValue = pwInputRef.current.value;\n    const isPwValid = !!pwValue.match(pwValidRegex);\n    return isPwValid;\n  };\n\n  const alertEachValid = () => {\n    setIsAlertPopId(!validateId());\n    setIsAlertPopPw(!validatePw());\n  };\n\n  const navigate = useNavigate();\n\n  const onValidation = () => {\n    if (validateId() && validatePw()) {\n      navigate('/');\n      alert('로그인 되었습니다! 환영합니다 :)');\n    } else {\n      alertEachValid();\n    }\n  };\n\n  const onSignIn = () => {\n    fetch(API_ADDRESS.sign_in, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: idInputRef.current.value,\n        password: pwInputRef.current.value\n      })\n    }).then(response => response.json()).then(res => {\n      if (res.message === 'SUCCESS') {\n        localStorage.setItem('TOKEN', res.access_token);\n        onValidation();\n      } else {\n        alertEachValid();\n      }\n    });\n  };\n\n  const onSignUp = () => {\n    navigate('/signup');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loginTitle\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(InputInterface, {\n          name: \"id\",\n          inputRef: idInputRef,\n          placeholder: \"\\uC544\\uC774\\uB514 \\uB610\\uB294 \\uC774\\uBA54\\uC77C\",\n          type: \"email\",\n          isAlertPop: isAlertPopId,\n          alertWord: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputInterface, {\n          name: \"pw\",\n          inputRef: pwInputRef,\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          type: \"password\",\n          isAlertPop: isAlertPopPw,\n          alertWord: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"findBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"findId\",\n          children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"findPw\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btnWrap\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          btnOnClick: onSignIn,\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          btnOnClick: onSignUp,\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"b9gD+6DdXOSudvu6PlGde1kDrdI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/user/Desktop/2차프로젝트/DrTart-frontend/src/pages/Login/Login.js"],"names":["React","useRef","useState","useNavigate","API_ADDRESS","InputInterface","Button","Login","idInputRef","pwInputRef","isAlertPopId","setIsAlertPopId","isAlertPopPw","setIsAlertPopPw","validateId","idValidRegex","idValue","current","value","isIdValid","match","validatePw","pwValidRegex","pwValue","isPwValid","alertEachValid","navigate","onValidation","alert","onSignIn","fetch","sign_in","method","body","JSON","stringify","email","password","then","response","json","res","message","localStorage","setItem","access_token","onSignUp"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { API_ADDRESS } from '../../apiConfig';\nimport InputInterface from './InputInterface/InputInterface';\nimport Button from '../../components/Button/Button';\nimport '../Login/Login.scss';\n\nfunction Login() {\n  const idInputRef = useRef();\n  const pwInputRef = useRef();\n  const [isAlertPopId, setIsAlertPopId] = useState(false);\n  const [isAlertPopPw, setIsAlertPopPw] = useState(false);\n\n  const validateId = () => {\n    const idValidRegex = /^([a-z0-9_.-]+)@([da-z.-]+).([a-z.]{2,6})$/g;\n    const idValue = idInputRef.current.value;\n    const isIdValid = !!idValue.match(idValidRegex);\n\n    return isIdValid;\n  };\n\n  const validatePw = () => {\n    const pwValidRegex =\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/g;\n    const pwValue = pwInputRef.current.value;\n    const isPwValid = !!pwValue.match(pwValidRegex);\n\n    return isPwValid;\n  };\n\n  const alertEachValid = () => {\n    setIsAlertPopId(!validateId());\n    setIsAlertPopPw(!validatePw());\n  };\n\n  const navigate = useNavigate();\n\n  const onValidation = () => {\n    if (validateId() && validatePw()) {\n      navigate('/');\n      alert('로그인 되었습니다! 환영합니다 :)');\n    } else {\n      alertEachValid();\n    }\n  };\n\n  const onSignIn = () => {\n    fetch(API_ADDRESS.sign_in, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: idInputRef.current.value,\n        password: pwInputRef.current.value,\n      }),\n    })\n      .then(response => response.json())\n      .then(res => {\n        if (res.message === 'SUCCESS') {\n          localStorage.setItem('TOKEN', res.access_token);\n          onValidation();\n        } else {\n          alertEachValid();\n        }\n      });\n  };\n\n  const onSignUp = () => {\n    navigate('/signup');\n  };\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"loginTitle\">로그인</h1>\n      <div className=\"loginBox\">\n        <form className=\"loginForm\">\n          <InputInterface\n            name=\"id\"\n            inputRef={idInputRef}\n            placeholder=\"아이디 또는 이메일\"\n            type=\"email\"\n            isAlertPop={isAlertPopId}\n            alertWord=\"아이디를 입력하세요.\"\n          />\n          <InputInterface\n            name=\"pw\"\n            inputRef={pwInputRef}\n            placeholder=\"비밀번호\"\n            type=\"password\"\n            isAlertPop={isAlertPopPw}\n            alertWord=\"비밀번호를 입력하세요.\"\n          />\n        </form>\n        <div className=\"findBtn\">\n          <span className=\"findId\">아이디 찾기</span>\n          <span className=\"findPw\">비밀번호 찾기</span>\n        </div>\n        <div className=\"btnWrap\">\n          <Button btnOnClick={onSignIn}>로그인</Button>\n          <Button btnOnClick={onSignUp}>회원가입</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}