{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\2\\uCC28\\uD504\\uB85C\\uC81D\\uD2B8\\\\DrTart-frontend\\\\src\\\\pages\\\\ProductList\\\\SortedProducts\\\\SortedProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport SortSelectArea from '../ProductsSorted/SortSelectArea/SortSelectArea';\nimport Product from '../Product/Product';\nimport ModalBuyNow from '../ModalBuyNow/ModalBuyNow';\nimport { TRANSELATE } from '../Transelate';\nimport { API_ADDRESS } from '../../../apiConfig';\nimport './SortedProducts.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SortedProducts = () => {\n  _s();\n\n  const [isProductLoading, setIsProductLoading] = useState(false);\n  const [productsList, setProductsList] = useState([]);\n  const {\n    mainCategory,\n    subCategory\n  } = useParams();\n  const [isPopModal, setIsPopModal] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState({});\n\n  const PopUpModalBuyNow = product => {\n    setIsPopModal(true);\n    setSelectedProduct(product);\n  };\n\n  const updateLike = id => {\n    const updatedList = productsList.map(product => {\n      if (id === product.id) {\n        return product.is_like_True ? { ...product,\n          is_like_True: !product.is_like_True,\n          like_num: product.like_num - 1\n        } : { ...product,\n          is_like_True: !product.is_like_True,\n          like_num: product.like_num + 1\n        };\n      } else {\n        return { ...product\n        };\n      }\n    });\n    setProductsList(updatedList);\n  };\n\n  const fetchData = useCallback(async () => {\n    let address;\n\n    if (mainCategory === 'all') {\n      address = API_ADDRESS.product_all;\n    } else {\n      address = subCategory ? `${API_ADDRESS.products_category}${subCategory}` : `${API_ADDRESS.products_menu}${mainCategory}`;\n    }\n\n    const data = await fetch(address);\n    const res = await data.json();\n    setProductsList(res.product_list.sort((a, b) => Date.parse(b.create_at) - Date.parse(a.create_at)));\n  }, [mainCategory, subCategory]);\n  useEffect(() => {\n    (async () => {\n      setIsProductLoading(true);\n      await fetchData();\n      setIsProductLoading(false);\n    })();\n  }, [fetchData, subCategory, mainCategory]);\n\n  const adjustList = products => {\n    setProductsList(products);\n  };\n\n  const checkCategory = (name, category) => !!subCategory ? name === mainCategory && category === subCategory : name === mainCategory;\n\n  return !isProductLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sortedProducts\",\n    children: [isPopModal && /*#__PURE__*/_jsxDEV(ModalBuyNow, {\n      setIsPopModal: setIsPopModal,\n      infoTag: adjustList.description,\n      product: selectedProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isPopModal ? 'mask' : 'maskOff'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortedProductsHead\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortedProductsTitle\",\n        children: [`${TRANSELATE[mainCategory]}`, subCategory && ` > ${TRANSELATE[subCategory]}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SortSelectArea, {\n        adjustList: adjustList,\n        productsList: productsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortedProductsContainer\",\n      children: (mainCategory === 'all' ? productsList : productsList.filter(_ref => {\n        let {\n          category: {\n            name,\n            category\n          }\n        } = _ref;\n        return checkCategory(name, category);\n      })).map(el => /*#__PURE__*/_jsxDEV(Product, {\n        el: el,\n        id: el.id,\n        btnOnClick: PopUpModalBuyNow,\n        updateLike: updateLike\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SortedProducts, \"ZbYJFxv94pxPlK5sfNxrxzq0Lpk=\", false, function () {\n  return [useParams];\n});\n\n_c = SortedProducts;\nexport default SortedProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortedProducts\");","map":{"version":3,"sources":["C:/Users/user/Desktop/2차프로젝트/DrTart-frontend/src/pages/ProductList/SortedProducts/SortedProducts.js"],"names":["React","useCallback","useEffect","useState","useParams","SortSelectArea","Product","ModalBuyNow","TRANSELATE","API_ADDRESS","SortedProducts","isProductLoading","setIsProductLoading","productsList","setProductsList","mainCategory","subCategory","isPopModal","setIsPopModal","selectedProduct","setSelectedProduct","PopUpModalBuyNow","product","updateLike","id","updatedList","map","is_like_True","like_num","fetchData","address","product_all","products_category","products_menu","data","fetch","res","json","product_list","sort","a","b","Date","parse","create_at","adjustList","products","checkCategory","name","category","description","filter","el"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport SortSelectArea from '../ProductsSorted/SortSelectArea/SortSelectArea';\nimport Product from '../Product/Product';\nimport ModalBuyNow from '../ModalBuyNow/ModalBuyNow';\nimport { TRANSELATE } from '../Transelate';\nimport { API_ADDRESS } from '../../../apiConfig';\nimport './SortedProducts.scss';\n\nconst SortedProducts = () => {\n  const [isProductLoading, setIsProductLoading] = useState(false);\n  const [productsList, setProductsList] = useState([]);\n  const { mainCategory, subCategory } = useParams();\n  const [isPopModal, setIsPopModal] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState({});\n\n  const PopUpModalBuyNow = product => {\n    setIsPopModal(true);\n    setSelectedProduct(product);\n  };\n\n  const updateLike = id => {\n    const updatedList = productsList.map(product => {\n      if (id === product.id) {\n        return product.is_like_True\n          ? {\n              ...product,\n              is_like_True: !product.is_like_True,\n              like_num: product.like_num - 1,\n            }\n          : {\n              ...product,\n              is_like_True: !product.is_like_True,\n              like_num: product.like_num + 1,\n            };\n      } else {\n        return { ...product };\n      }\n    });\n    setProductsList(updatedList);\n  };\n\n  const fetchData = useCallback(async () => {\n    let address;\n    if (mainCategory === 'all') {\n      address = API_ADDRESS.product_all;\n    } else {\n      address = subCategory\n        ? `${API_ADDRESS.products_category}${subCategory}`\n        : `${API_ADDRESS.products_menu}${mainCategory}`;\n    }\n    const data = await fetch(address);\n    const res = await data.json();\n\n    setProductsList(\n      res.product_list.sort(\n        (a, b) => Date.parse(b.create_at) - Date.parse(a.create_at)\n      )\n    );\n  }, [mainCategory, subCategory]);\n\n  useEffect(() => {\n    (async () => {\n      setIsProductLoading(true);\n      await fetchData();\n      setIsProductLoading(false);\n    })();\n  }, [fetchData, subCategory, mainCategory]);\n\n  const adjustList = products => {\n    setProductsList(products);\n  };\n\n  const checkCategory = (name, category) =>\n    !!subCategory\n      ? name === mainCategory && category === subCategory\n      : name === mainCategory;\n\n  return (\n    !isProductLoading && (\n      <div className=\"sortedProducts\">\n        {isPopModal && (\n          <ModalBuyNow\n            setIsPopModal={setIsPopModal}\n            infoTag={adjustList.description}\n            product={selectedProduct}\n          />\n        )}\n        <div className={isPopModal ? 'mask' : 'maskOff'} />\n        <div className=\"sortedProductsHead\">\n          <div className=\"sortedProductsTitle\">\n            {`${TRANSELATE[mainCategory]}`}\n            {subCategory && ` > ${TRANSELATE[subCategory]}`}\n          </div>\n          <SortSelectArea adjustList={adjustList} productsList={productsList} />\n        </div>\n        <div className=\"sortedProductsContainer\">\n          {(mainCategory === 'all'\n            ? productsList\n            : productsList.filter(({ category: { name, category } }) =>\n                checkCategory(name, category)\n              )\n          ).map(el => (\n            <Product\n              el={el}\n              key={el.id}\n              id={el.id}\n              btnOnClick={PopUpModalBuyNow}\n              updateLike={updateLike}\n            />\n          ))}\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default SortedProducts;\n"]},"metadata":{},"sourceType":"module"}