{"ast":null,"code":"import _slicedToArray from\"C:/Users/user/Desktop/2\\uCC28\\uD504\\uB85C\\uC81D\\uD2B8/DrTart-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from'react';import{useNavigate}from'react-router';import{API_ADDRESS}from'../../apiConfig';import InputInterface from'./InputInterface/InputInterface';import Button from'../../components/Button/Button';import'../Login/Login.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){var idInputRef=useRef();var pwInputRef=useRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAlertPopId=_useState2[0],setIsAlertPopId=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isAlertPopPw=_useState4[0],setIsAlertPopPw=_useState4[1];var validateId=function validateId(){var idValidRegex=/^([a-z0-9_.-]+)@([da-z.-]+).([a-z.]{2,6})$/g;var idValue=idInputRef.current.value;var isIdValid=!!idValue.match(idValidRegex);return isIdValid;};var validatePw=function validatePw(){var pwValidRegex=/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/g;var pwValue=pwInputRef.current.value;var isPwValid=!!pwValue.match(pwValidRegex);return isPwValid;};var alertEachValid=function alertEachValid(){setIsAlertPopId(!validateId());setIsAlertPopPw(!validatePw());};var navigate=useNavigate();var onValidation=function onValidation(){if(validateId()&&validatePw()){navigate('/');alert('로그인 되었습니다! 환영합니다 :)');}else{alertEachValid();}};var onSignIn=function onSignIn(){fetch(API_ADDRESS.sign_in,{method:'POST',body:JSON.stringify({email:idInputRef.current.value,password:pwInputRef.current.value})}).then(function(response){return response.json();}).then(function(res){if(res.message==='SUCCESS'){localStorage.setItem('TOKEN',res.access_token);onValidation();}else{alertEachValid();}});};var onSignUp=function onSignUp(){navigate('/signup');};return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"loginTitle\",children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginBox\",children:[/*#__PURE__*/_jsxs(\"form\",{className:\"loginForm\",children:[/*#__PURE__*/_jsx(InputInterface,{name:\"id\",inputRef:idInputRef,placeholder:\"\\uC544\\uC774\\uB514 \\uB610\\uB294 \\uC774\\uBA54\\uC77C\",type:\"email\",isAlertPop:isAlertPopId,alertWord:\"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\"}),/*#__PURE__*/_jsx(InputInterface,{name:\"pw\",inputRef:pwInputRef,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\",type:\"password\",isAlertPop:isAlertPopPw,alertWord:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"findBtn\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"findId\",children:\"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(\"span\",{className:\"findPw\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btnWrap\",children:[/*#__PURE__*/_jsx(Button,{btnOnClick:onSignIn,children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(Button,{btnOnClick:onSignUp,children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]})]})]});}export default Login;","map":{"version":3,"sources":["C:/Users/user/Desktop/2차프로젝트/DrTart-frontend/src/pages/Login/Login.js"],"names":["React","useRef","useState","useNavigate","API_ADDRESS","InputInterface","Button","Login","idInputRef","pwInputRef","isAlertPopId","setIsAlertPopId","isAlertPopPw","setIsAlertPopPw","validateId","idValidRegex","idValue","current","value","isIdValid","match","validatePw","pwValidRegex","pwValue","isPwValid","alertEachValid","navigate","onValidation","alert","onSignIn","fetch","sign_in","method","body","JSON","stringify","email","password","then","response","json","res","message","localStorage","setItem","access_token","onSignUp"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { API_ADDRESS } from '../../apiConfig';\nimport InputInterface from './InputInterface/InputInterface';\nimport Button from '../../components/Button/Button';\nimport '../Login/Login.scss';\n\nfunction Login() {\n  const idInputRef = useRef();\n  const pwInputRef = useRef();\n  const [isAlertPopId, setIsAlertPopId] = useState(false);\n  const [isAlertPopPw, setIsAlertPopPw] = useState(false);\n\n  const validateId = () => {\n    const idValidRegex = /^([a-z0-9_.-]+)@([da-z.-]+).([a-z.]{2,6})$/g;\n    const idValue = idInputRef.current.value;\n    const isIdValid = !!idValue.match(idValidRegex);\n\n    return isIdValid;\n  };\n\n  const validatePw = () => {\n    const pwValidRegex =\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/g;\n    const pwValue = pwInputRef.current.value;\n    const isPwValid = !!pwValue.match(pwValidRegex);\n\n    return isPwValid;\n  };\n\n  const alertEachValid = () => {\n    setIsAlertPopId(!validateId());\n    setIsAlertPopPw(!validatePw());\n  };\n\n  const navigate = useNavigate();\n\n  const onValidation = () => {\n    if (validateId() && validatePw()) {\n      navigate('/');\n      alert('로그인 되었습니다! 환영합니다 :)');\n    } else {\n      alertEachValid();\n    }\n  };\n\n  const onSignIn = () => {\n    fetch(API_ADDRESS.sign_in, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: idInputRef.current.value,\n        password: pwInputRef.current.value,\n      }),\n    })\n      .then(response => response.json())\n      .then(res => {\n        if (res.message === 'SUCCESS') {\n          localStorage.setItem('TOKEN', res.access_token);\n          onValidation();\n        } else {\n          alertEachValid();\n        }\n      });\n  };\n\n  const onSignUp = () => {\n    navigate('/signup');\n  };\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"loginTitle\">로그인</h1>\n      <div className=\"loginBox\">\n        <form className=\"loginForm\">\n          <InputInterface\n            name=\"id\"\n            inputRef={idInputRef}\n            placeholder=\"아이디 또는 이메일\"\n            type=\"email\"\n            isAlertPop={isAlertPopId}\n            alertWord=\"아이디를 입력하세요.\"\n          />\n          <InputInterface\n            name=\"pw\"\n            inputRef={pwInputRef}\n            placeholder=\"비밀번호\"\n            type=\"password\"\n            isAlertPop={isAlertPopPw}\n            alertWord=\"비밀번호를 입력하세요.\"\n          />\n        </form>\n        <div className=\"findBtn\">\n          <span className=\"findId\">아이디 찾기</span>\n          <span className=\"findPw\">비밀번호 찾기</span>\n        </div>\n        <div className=\"btnWrap\">\n          <Button btnOnClick={onSignIn}>로그인</Button>\n          <Button btnOnClick={onSignUp}>회원가입</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}