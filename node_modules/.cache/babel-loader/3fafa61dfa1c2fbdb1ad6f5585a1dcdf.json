{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CYKIM\\\\Desktop\\\\DrTart-frontend-main\\\\src\\\\pages\\\\Order\\\\OrderList\\\\OrderList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link, useLocation, useParams, useNavigate } from 'react-router-dom';\nimport Button from '../../../components/Button/Button';\nimport Goods from '../Goods/Goods';\nimport { API_ADDRESS } from '../../../apiConfig';\nimport '../Order.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderList = () => {\n  _s();\n\n  const [cartList, setCartList] = useState([]);\n  const [isOrderLoading, setIsOrderLoading] = useState(false);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [isTermsChecked, setIsTermsChecked] = useState(false);\n  const {\n    pageType\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  let token = localStorage.getItem('TOKEN') || '';\n  const fetchCartData = useCallback(async () => {\n    const data = await fetch(API_ADDRESS.order_cart, {\n      headers: {\n        Authorization: token\n      }\n    });\n    const res = await data.json();\n\n    if (res.cart_info) {\n      setCartList(() => res.cart_info);\n      setTotalPrice(() => 0);\n      res.cart_info.forEach(_ref => {\n        let {\n          price,\n          quantity\n        } = _ref;\n        setTotalPrice(price * quantity);\n      });\n    } else {\n      setCartList(() => []);\n    }\n  }, [token]);\n  useEffect(() => {\n    if (pageType === 'cart') {\n      (async () => {\n        setIsOrderLoading(true);\n        await fetchCartData();\n        setIsOrderLoading(false);\n      })();\n    } else {\n      setCartList(() => location.state.cartList);\n      location.state.cartList.forEach(_ref2 => {\n        let {\n          price,\n          quantity\n        } = _ref2;\n        setTotalPrice(price * quantity);\n      });\n    }\n  }, [fetchCartData, pageType, location]);\n\n  const adjustCart = (id, quantity) => {\n    let adjustedList = [];\n    let differ = 0;\n    let productId = 0;\n    cartList.forEach(product => {\n      if (product.cart_id === id) {\n        differ = quantity - product.quantity;\n        productId = product.product_id;\n        adjustedList.push({ ...product,\n          quantity: quantity\n        });\n      } else {\n        adjustedList.push({ ...product\n        });\n      }\n    });\n    setCartList(adjustedList);\n    fetch(API_ADDRESS.order_list, {\n      method: 'POST',\n      headers: {\n        Authorization: token\n      },\n      body: JSON.stringify({\n        product_id: productId,\n        quantity: differ\n      })\n    });\n  };\n\n  const adjustTotalPrice = (type, price) => {\n    setTotalPrice(prev => type === 'minus' ? prev - price : prev + price);\n  };\n\n  const deleteGoods = id => {\n    const [targetToDelete] = cartList.filter(product => product.cart_id === id);\n    adjustTotalPrice('minus', targetToDelete.price * targetToDelete.quantity);\n    setCartList(cartList.filter(product => product.cart_id !== id));\n    fetch(API_ADDRESS.order_cart, {\n      method: 'DELETE',\n      headers: {\n        Authorization: token\n      },\n      body: JSON.stringify({\n        cart: id\n      })\n    });\n  };\n\n  const deleteAllGoods = async () => {\n    const targetIndex = cartList.map(product => product.cart_id);\n\n    for (let index of targetIndex) {\n      deleteGoods(index);\n    }\n\n    setCartList([]);\n  };\n\n  const onOrder = async () => {\n    if (isTermsChecked) {\n      const orderTable = cartList.map(product => ({\n        product_id: product.product_id,\n        quantity: product.quantity\n      }));\n      const data = await fetch(API_ADDRESS.order_checkout, {\n        method: 'POST',\n        headers: {\n          Authorization: token\n        },\n        body: JSON.stringify(orderTable)\n      });\n      const res = await data.json();\n      navigate(`/order/confirm?order=${res.message}`);\n    } else {\n      window.alert('약관에 동의해주셔야 결제가 가능합니다.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageTitleArea\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"orderTitle\",\n          children: \"\\uC8FC\\uBB38\\uB0B4\\uC5ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageContent\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"productSection\",\n        children: cartList.length ? !isOrderLoading && /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"goodsTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"goodsTableHead\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"tableHeadElement tableHeadImage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"tableHeadElement tableHeadGoods\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\uC0C1\\uD488\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"tableHeadElement tableHeadQuantity\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\uC218\\uB7C9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"tableHeadElement tableHeadPrice\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\uAE08\\uC561\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"tableHeadElement tableHeadButton\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), cartList.map(product => /*#__PURE__*/_jsxDEV(Goods, {\n            product: product,\n            pageType: pageType,\n            deleteGoods: deleteGoods,\n            adjustTotalPrice: adjustTotalPrice,\n            adjustCart: adjustCart\n          }, product.cart_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nullContentTable\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC8FC\\uBB38\\uD55C \\uB0B4\\uC5ED\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderList, \"SvbDRExGD1jFzQhj1IiVpNiRiJE=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n\n_c = OrderList;\nexport default OrderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"sources":["C:/Users/CYKIM/Desktop/DrTart-frontend-main/src/pages/Order/OrderList/OrderList.js"],"names":["React","useCallback","useEffect","useState","Link","useLocation","useParams","useNavigate","Button","Goods","API_ADDRESS","OrderList","cartList","setCartList","isOrderLoading","setIsOrderLoading","totalPrice","setTotalPrice","isTermsChecked","setIsTermsChecked","pageType","location","navigate","token","localStorage","getItem","fetchCartData","data","fetch","order_cart","headers","Authorization","res","json","cart_info","forEach","price","quantity","state","adjustCart","id","adjustedList","differ","productId","product","cart_id","product_id","push","order_list","method","body","JSON","stringify","adjustTotalPrice","type","prev","deleteGoods","targetToDelete","filter","cart","deleteAllGoods","targetIndex","map","index","onOrder","orderTable","order_checkout","message","window","alert","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { Link, useLocation, useParams, useNavigate } from 'react-router-dom';\nimport Button from '../../../components/Button/Button';\nimport Goods from '../Goods/Goods';\nimport { API_ADDRESS } from '../../../apiConfig';\nimport '../Order.scss';\n\nconst OrderList = () => {\n  const [cartList, setCartList] = useState([]);\n  const [isOrderLoading, setIsOrderLoading] = useState(false);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [isTermsChecked, setIsTermsChecked] = useState(false);\n  const { pageType } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  let token = localStorage.getItem('TOKEN') || '';\n\n  const fetchCartData = useCallback(async () => {\n    const data = await fetch(API_ADDRESS.order_cart, {\n      headers: { Authorization: token },\n    });\n    const res = await data.json();\n    if (res.cart_info) {\n      setCartList(() => res.cart_info);\n      setTotalPrice(() => 0);\n      res.cart_info.forEach(({ price, quantity }) => {\n        setTotalPrice(price * quantity);\n      });\n    } else {\n      setCartList(() => []);\n    }\n  }, [token]);\n\n  useEffect(() => {\n    if (pageType === 'cart') {\n      (async () => {\n        setIsOrderLoading(true);\n        await fetchCartData();\n        setIsOrderLoading(false);\n      })();\n    } else {\n      setCartList(() => location.state.cartList);\n      location.state.cartList.forEach(({ price, quantity }) => {\n        setTotalPrice(price * quantity);\n      });\n    }\n  }, [fetchCartData, pageType, location]);\n\n  const adjustCart = (id, quantity) => {\n    let adjustedList = [];\n    let differ = 0;\n    let productId = 0;\n    cartList.forEach(product => {\n      if (product.cart_id === id) {\n        differ = quantity - product.quantity;\n        productId = product.product_id;\n        adjustedList.push({ ...product, quantity: quantity });\n      } else {\n        adjustedList.push({ ...product });\n      }\n    });\n    setCartList(adjustedList);\n\n    fetch(API_ADDRESS.order_list, {\n      method: 'POST',\n      headers: {\n        Authorization: token,\n      },\n      body: JSON.stringify({\n        product_id: productId,\n        quantity: differ,\n      }),\n    });\n  };\n\n  const adjustTotalPrice = (type, price) => {\n    setTotalPrice(prev => (type === 'minus' ? prev - price : prev + price));\n  };\n\n  const deleteGoods = id => {\n    const [targetToDelete] = cartList.filter(product => product.cart_id === id);\n    adjustTotalPrice('minus', targetToDelete.price * targetToDelete.quantity);\n    setCartList(cartList.filter(product => product.cart_id !== id));\n\n    fetch(API_ADDRESS.order_cart, {\n      method: 'DELETE',\n      headers: {\n        Authorization: token,\n      },\n      body: JSON.stringify({\n        cart: id,\n      }),\n    });\n  };\n\n  const deleteAllGoods = async () => {\n    const targetIndex = cartList.map(product => product.cart_id);\n    for (let index of targetIndex) {\n      deleteGoods(index);\n    }\n    setCartList([]);\n  };\n\n  const onOrder = async () => {\n    if (isTermsChecked) {\n      const orderTable = cartList.map(product => ({\n        product_id: product.product_id,\n        quantity: product.quantity,\n      }));\n\n      const data = await fetch(API_ADDRESS.order_checkout, {\n        method: 'POST',\n        headers: {\n          Authorization: token,\n        },\n        body: JSON.stringify(orderTable),\n      });\n\n      const res = await data.json();\n\n      navigate(`/order/confirm?order=${res.message}`);\n    } else {\n      window.alert('약관에 동의해주셔야 결제가 가능합니다.');\n    }\n  };\n\n  return (\n    <div className=\"order\">\n      <div className=\"pageTitleArea\">\n        <div className=\"pageTitle\">\n          <h1 className=\"orderTitle\">주문내역</h1>\n        </div>\n      </div>\n      <div className=\"pageContent\">\n        <section className=\"productSection\">\n          {cartList.length ? (\n            !isOrderLoading && (\n              <table className=\"goodsTable\">\n                <thead className=\"goodsTableHead\">\n                  <tr>\n                    <th className=\"tableHeadElement tableHeadImage\" />\n                    <th className=\"tableHeadElement tableHeadGoods\">\n                      <p>상품</p>\n                    </th>\n                    <th className=\"tableHeadElement tableHeadQuantity\">\n                      <p>수량</p>\n                    </th>\n                    <th className=\"tableHeadElement tableHeadPrice\">\n                      <p>금액</p>\n                    </th>\n                    <th className=\"tableHeadElement tableHeadButton\" />\n                  </tr>\n                </thead>\n                {cartList.map(product => (\n                  <Goods\n                    key={product.cart_id}\n                    product={product}\n                    pageType={pageType}\n                    deleteGoods={deleteGoods}\n                    adjustTotalPrice={adjustTotalPrice}\n                    adjustCart={adjustCart}\n                  />\n                ))}\n              </table>\n            )\n          ) : (\n            <div className=\"nullContentTable\">\n              <p>주문한 내역이 없습니다.</p>\n            </div>\n          )}\n        </section>\n      </div>\n    </div>\n  );\n};\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}